name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths: [ 'public/**', 'netlify.toml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'public/**', 'netlify.toml' ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Check frontend structure
      run: |
        echo "Checking frontend files..."
        ls -la public/
        test -f public/index.html || (echo "index.html not found" && exit 1)
        test -f public/dashboard.html || (echo "dashboard.html not found" && exit 1)
        test -f netlify.toml || (echo "netlify.toml not found" && exit 1)
        echo "✅ Frontend structure is valid"
    
    - name: Validate HTML
      run: |
        echo "Validating HTML files..."
        # Basic HTML validation (check for required elements)
        grep -q "<!DOCTYPE html>" public/index.html || (echo "Missing DOCTYPE in index.html" && exit 1)
        grep -q "<!DOCTYPE html>" public/dashboard.html || (echo "Missing DOCTYPE in dashboard.html" && exit 1)
        echo "✅ HTML validation passed"
    
    - name: Check for security issues
      run: |
        echo "Checking for security issues..."
        # Check for inline scripts that might be unsafe
        if grep -r "eval(" public/; then
          echo "⚠️ Warning: Found eval() usage"
        fi
        if grep -r "innerHTML" public/; then
          echo "⚠️ Warning: Found innerHTML usage"
        fi
        echo "✅ Security check completed"
    
    - name: Test API connectivity
      run: |
        echo "Testing API connectivity..."
        # Test if the API URL in netlify.toml is accessible
        API_URL=$(grep "VITE_API_URL" netlify.toml | sed 's/.*VITE_API_URL = "\(.*\)"/\1/')
        if [ -n "$API_URL" ]; then
          echo "API URL found: $API_URL"
          # Note: We can't actually test external URLs in CI without network access
          echo "✅ API URL configuration found"
        else
          echo "❌ API URL not configured"
          exit 1
        fi

  accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check accessibility
      run: |
        echo "Checking accessibility..."
        # Check for required accessibility attributes
        if ! grep -q "aria-label" public/dashboard.html; then
          echo "⚠️ Warning: No aria-label attributes found"
        fi
        if ! grep -q "role=" public/dashboard.html; then
          echo "⚠️ Warning: No role attributes found"
        fi
        echo "✅ Accessibility check completed"

  performance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        # Check for large files that might affect performance
        find public/ -name "*.js" -size +1M -exec echo "⚠️ Large JS file: {}" \;
        find public/ -name "*.css" -size +500k -exec echo "⚠️ Large CSS file: {}" \;
        find public/ -name "*.html" -size +500k -exec echo "⚠️ Large HTML file: {}" \;
        echo "✅ Performance check completed"
