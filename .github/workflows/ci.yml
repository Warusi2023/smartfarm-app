name: CI - SmartFarm

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  NODE_VERSION: '18.19.0'

jobs:
  # Backend CI
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'backend-api/package-lock.json'
          
      - name: Install dependencies
        working-directory: backend-api
        run: npm ci
        
      - name: Run linting
        working-directory: backend-api
        run: npm run lint:check
        
      - name: Run tests
        working-directory: backend-api
        run: npm test
        
      - name: Run build
        working-directory: backend-api
        run: npm run build
        
  # Frontend CI
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'web-project/package-lock.json'
          
      - name: Install dependencies
        working-directory: web-project
        run: npm ci
        
      - name: Run linting
        working-directory: web-project
        run: npm run lint:check
        
      - name: Run tests
        working-directory: web-project
        run: npm test
        
      - name: Validate SVG viewBox attributes
        working-directory: web-project
        run: npm run validate:svg
        
      - name: Validate DOM IDs
        working-directory: web-project
        run: npm run validate:ids
        
      - name: Validate CORS configuration
        working-directory: web-project
        run: npm run validate:cors
        
      - name: Run build
        working-directory: web-project
        run: npm run build
        
  # Integration tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install root dependencies
        run: npm ci
        
      - name: Install all project dependencies
        run: npm run install:all
        
      - name: Run all tests
        run: npm run test:all
        
      - name: Run all builds
        run: npm run build:all