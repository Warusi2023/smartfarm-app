{
  "name": "smartfarm-backend",
  "version": "1.0.0",
  "description": "SmartFarm Backend API - Express.js server with Sequelize ORM",
  "main": "server.js",
  "scripts": {
    "start": "node start.js",
    "dev": "nodemon server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "lint": "eslint . --ext .js --fix",
    "lint:check": "eslint . --ext .js",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "migrate": "npx sequelize-cli db:migrate",
    "migrate:undo": "npx sequelize-cli db:migrate:undo",
    "seed": "npx sequelize-cli db:seed:all",
    "seed:undo": "npx sequelize-cli db:seed:undo:all",
    "reset": "npm run migrate:undo:all && npm run migrate && npm run seed",
    "prepare": "husky install"
  },
  "keywords": [
    "farm",
    "agriculture",
    "api",
    "express",
    "sequelize",
    "postgresql"
  ],
  "author": "SmartFarm Team",
  "license": "MIT",
  "dependencies": {
    "express": "^4.18.2",
    "sequelize": "^6.35.0",
    "pg": "^8.11.3",
    "pg-hstore": "^2.3.4",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express-rate-limit": "^7.1.5",
    "compression": "^1.7.4",
    "morgan": "^1.10.0"
  },
  "devDependencies": {
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.1.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.1.0",
    "sequelize-cli": "^6.6.2",
    "supertest": "^6.3.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "jest": {
    "testEnvironment": "node",
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.js"],
    "testMatch": [
      "<rootDir>/tests/**/*.test.js",
      "<rootDir>/tests/**/*.spec.js"
    ],
    "collectCoverageFrom": [
      "routes/**/*.js",
      "models/**/*.js",
      "middleware/**/*.js",
      "utils/**/*.js",
      "!**/node_modules/**",
      "!**/tests/**"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "coverageReporters": ["text", "lcov", "html"]
  }
}